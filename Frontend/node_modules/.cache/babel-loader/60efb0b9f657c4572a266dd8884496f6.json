{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Ministry of Programming\\\\askit\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport store from './store/index';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport setAuthorizationToken from './authorization/authorization';\nimport { LOGIN_SUCCESS } from './store/modules/auth/authTypes'; //when the page reloads, the auth user is still set\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (localStorage.getItem('user_token')) {\n  setAuthorizationToken(localStorage.getItem('user_token'));\n\n  const getQuestions = id => dispatch(getUser(id));\n\n  getQuestions(author_id);\n  let userData = localStorage.getItem('user_info') == null ? null : JSON.parse(localStorage.getItem('user_info')); //let userData = localStorage.getItem('user_data') == null ? null : JSON.parse(localStorage.getItem('user_data'))\n\n  store.dispatch({\n    type: LOGIN_SUCCESS,\n    payload: userData\n  }); //provided he has a valid token \n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 41\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 17\n}, this), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n*/","map":{"version":3,"sources":["C:/Users/admin/Desktop/Ministry of Programming/askit/src/index.js"],"names":["React","ReactDOM","Routes","serviceWorker","Provider","store","App","reportWebVitals","setAuthorizationToken","LOGIN_SUCCESS","localStorage","getItem","getQuestions","id","dispatch","getUser","author_id","userData","JSON","parse","type","payload","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,qBAAP,MAAmC,+BAAnC;AACA,SAASC,aAAT,QAA8B,gCAA9B,C,CAEA;;;;AACA,IAAIC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAJ,EAAuC;AACrCH,EAAAA,qBAAqB,CAACE,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAD,CAArB;;AACA,QAAMC,YAAY,GAAIC,EAAD,IAAQC,QAAQ,CAACC,OAAO,CAACF,EAAD,CAAR,CAArC;;AACED,EAAAA,YAAY,CAACI,SAAD,CAAZ;AAEF,MAAIC,QAAQ,GAAGP,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAoC,IAApC,GAA2C,IAA3C,GAAkDO,IAAI,CAACC,KAAL,CAAWT,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAjE,CALqC,CAOrC;;AACAN,EAAAA,KAAK,CAACS,QAAN,CAAe;AAAEM,IAAAA,IAAI,EAAEX,aAAR;AAAuBY,IAAAA,OAAO,EAAEJ;AAAhC,GAAf,EARqC,CAQqB;AAE3D;;AACDhB,QAAQ,CAACqB,MAAT,eAAgB,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEjB,KAAjB;AAAA,yBAAwB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA+DkB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA/D,E,CAEA;AACA;AACA;;AACArB,aAAa,CAACsB,UAAd;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\"\nimport './index.css';\nimport store from './store/index'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport setAuthorizationToken  from './authorization/authorization';\nimport { LOGIN_SUCCESS } from './store/modules/auth/authTypes';\n\n//when the page reloads, the auth user is still set\nif (localStorage.getItem('user_token')){\n  setAuthorizationToken(localStorage.getItem('user_token')) \n  const getQuestions = (id) => dispatch(getUser(id));\n    getQuestions(author_id);\n\n  let userData = localStorage.getItem('user_info')== null ? null : JSON.parse(localStorage.getItem('user_info'))\n\n  //let userData = localStorage.getItem('user_data') == null ? null : JSON.parse(localStorage.getItem('user_data'))\n  store.dispatch({ type: LOGIN_SUCCESS, payload: userData}) //provided he has a valid token \n\n}\nReactDOM.render(<Provider store={store}><Routes /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n*/\n"]},"metadata":{},"sourceType":"module"}