{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Ministry of Programming\\\\askit\\\\src\\\\components\\\\questions\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Moment from \"react-moment\";\nimport { useSelector } from \"react-redux\";\nimport { Card, CardText, CardBody, CardTitle } from \"reactstrap\";\nimport \"./Question.css\"; //import Likes from '../likes/Likes'\n\nimport Answers from \"../answers/Answers\";\nimport DeleteQuestion from \"./DeleteQuestion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Question = ({\n  question\n}) => {\n  _s();\n\n  const currentState = useSelector(state => state);\n  const authID = currentState.Auth.currentUser ? currentState.Auth.currentUser.id : \"\";\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"style-card-main\",\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"style-card-body\",\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: question.author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            float: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Moment, {\n            fromNow: true,\n            children: question.created_at\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardText, {\n        children: question.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"style-fav\",\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Answers, {\n            questionID: question.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false), authID === question.author_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(DeleteQuestion, {\n              questionID: question.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"mWrb+H3SJ7nxIqaYcf3PSdnYk2I=\", false, function () {\n  return [useSelector];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Ministry of Programming/askit/src/components/questions/Question.js"],"names":["React","Moment","useSelector","Card","CardText","CardBody","CardTitle","Answers","DeleteQuestion","Question","question","currentState","state","authID","Auth","currentUser","id","fontWeight","author","name","float","created_at","content","author_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAoD,YAApD;AAEA,OAAO,gBAAP,C,CACA;;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjC,QAAMC,YAAY,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAZ,CAAhC;AACA,QAAMC,MAAM,GAAGF,YAAY,CAACG,IAAb,CAAkBC,WAAlB,GACXJ,YAAY,CAACG,IAAb,CAAkBC,WAAlB,CAA8BC,EADnB,GAEX,EAFJ;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,iBAApB;AAAA,8BACE,QAAC,SAAD;AAAA,gCACE;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAAb;AAAA,oBACGP,QAAQ,CAACQ,MAAT,CAAgBC;AADnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,MAAf;AAAA,sBAAiBV,QAAQ,CAACW;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,QAAD;AAAA,kBAAWX,QAAQ,CAACY;AAApB;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,UAAU,EAAEZ,QAAQ,CAACM;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF,yBADF,EAIGH,MAAM,KAAKH,QAAQ,CAACa,SAApB,gBACC;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACE;AAAA,mCACE,QAAC,cAAD;AAAgB,cAAA,UAAU,EAAEb,QAAQ,CAACM;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,GAOC,EAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAnCD;;GAAMP,Q;UACiBP,W;;;KADjBO,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card, CardText, CardBody, CardTitle } from \"reactstrap\";\r\n\r\nimport \"./Question.css\";\r\n//import Likes from '../likes/Likes'\r\nimport Answers from \"../answers/Answers\";\r\nimport DeleteQuestion from \"./DeleteQuestion\";\r\n\r\nconst Question = ({ question }) => {\r\n  const currentState = useSelector((state) => state);\r\n  const authID = currentState.Auth.currentUser\r\n    ? currentState.Auth.currentUser.id\r\n    : \"\";\r\n\r\n  return (\r\n    <Card className=\"style-card-main\">\r\n      <CardBody className=\"style-card-body\">\r\n        <CardTitle>\r\n          <span style={{ fontWeight: \"bold\" }}>\r\n            {question.author.name}\r\n          </span>\r\n          <span style={{ float: \"right\" }}>\r\n            <Moment fromNow>{question.created_at}</Moment>\r\n          </span>\r\n        </CardTitle>\r\n        <CardText>{question.content}</CardText>\r\n        <div className=\"style-fav\">\r\n          <>\r\n            <Answers questionID={question.id} />\r\n          </>\r\n          {authID === question.author_id ? (\r\n            <div className=\"ml-auto\">\r\n              <span>\r\n                <DeleteQuestion questionID={question.id} />\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}