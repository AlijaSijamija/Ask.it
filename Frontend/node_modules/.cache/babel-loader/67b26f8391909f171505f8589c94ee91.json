{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Ministry of Programming\\\\askit\\\\src\\\\components\\\\questions\\\\QuestionDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Moment from \"react-moment\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Card, CardText, CardBody, CardTitle } from \"reactstrap\";\nimport { fetchQuestion } from \"../../store/modules/questions/actions/questionsAction\";\nimport Navigation from \"../Navigation\";\nimport Likes from '../likes/Likes';\nimport Answers from \"../answers/Answers\";\nimport Answer from \"../answers/Answer\";\nimport DeleteQuestion from \"./DeleteQuestion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionDetails = props => {\n  _s();\n\n  const questionID = props.match.params.id;\n  const dispatch = useDispatch();\n\n  const singleQuestion = id => dispatch(fetchQuestion(id));\n\n  const currentState = useSelector(state => state);\n  const currentUserState = useSelector(state => state.Auth);\n  const question = currentState.QuestionsState.question;\n  const questionAnswers = currentState.AnswersState;\n  const likeAnswers = currentState.likesState;\n  const authID = currentUserState.userId;\n  useEffect(() => {\n    singleQuestion(questionID); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let singleQuestionAnswers = [];\n\n  if (questionAnswers) {\n    // eslint-disable-next-line array-callback-return\n    questionAnswers.answerItems.map(eachItem => {\n      if (eachItem.questionID === questionID) {\n        singleQuestionAnswers = eachItem.answers;\n      }\n    });\n  }\n\n  let singleLikeAnswers = [];\n\n  if (likeAnswers) {\n    // eslint-disable-next-line array-callback-return\n    likeAnswers.likeItems.map(eachItem => {\n      console.log(eachItem);\n\n      if (eachItem.questionID === questionID) {\n        singleLikeAnswers = eachItem.likes;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 style-card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            style: {\n              paddingBottom: \"0px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  href: \"\",\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: question.author ? question.author.name : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  float: \"right\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Moment, {\n                  fromNow: true,\n                  children: question ? question.created_at : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: question.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"style-fav\",\n              children: [/*#__PURE__*/_jsxDEV(Likes, {\n                questionsID: questionID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Answers, {\n                questionID: questionID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), authID === question.author_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(DeleteQuestion, {\n                    questionID: question.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 style-card-answer\",\n        children: singleQuestionAnswers.length > 0 ? singleQuestionAnswers.map(answer => {\n          return /*#__PURE__*/_jsxDEV(Answer, {\n            answer: answer\n          }, answer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 24\n          }, this);\n        }) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionDetails, \"vqxln2hP6mIa5mX887T77ciQufk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = QuestionDetails;\nexport default QuestionDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Ministry of Programming/askit/src/components/questions/QuestionDetails.js"],"names":["React","useEffect","Moment","useSelector","useDispatch","Card","CardText","CardBody","CardTitle","fetchQuestion","Navigation","Likes","Answers","Answer","DeleteQuestion","QuestionDetails","props","questionID","match","params","id","dispatch","singleQuestion","currentState","state","currentUserState","Auth","question","QuestionsState","questionAnswers","AnswersState","likeAnswers","likesState","authID","userId","singleQuestionAnswers","answerItems","map","eachItem","answers","singleLikeAnswers","likeItems","console","log","likes","paddingBottom","fontWeight","author","name","float","created_at","content","author_id","length","answer"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Card, CardText, CardBody, CardTitle } from \"reactstrap\";\r\n\r\nimport { fetchQuestion } from \"../../store/modules/questions/actions/questionsAction\";\r\nimport Navigation from \"../Navigation\";\r\nimport Likes from '../likes/Likes'\r\nimport Answers from \"../answers/Answers\";\r\nimport Answer from \"../answers/Answer\";\r\nimport DeleteQuestion from \"./DeleteQuestion\";\r\n\r\nconst QuestionDetails = (props) => {\r\n  const questionID = props.match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const singleQuestion = (id) => dispatch(fetchQuestion(id));\r\n\r\n  const currentState = useSelector((state) => state);\r\n\r\n  const currentUserState = useSelector((state) => state.Auth);\r\n\r\n  const question = currentState.QuestionsState.question;\r\n\r\n  const questionAnswers = currentState.AnswersState;\r\n  const likeAnswers = currentState.likesState;\r\n\r\n  const authID = currentUserState.userId\r\n  \r\n\r\n  useEffect(() => {\r\n    singleQuestion(questionID);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let singleQuestionAnswers = [];\r\n\r\n  if (questionAnswers) {\r\n    // eslint-disable-next-line array-callback-return\r\n    questionAnswers.answerItems.map((eachItem) => {\r\n      if (eachItem.questionID === questionID) {\r\n        singleQuestionAnswers = eachItem.answers;\r\n      }\r\n    });\r\n  }\r\n\r\n  let singleLikeAnswers = [];\r\n\r\n  if (likeAnswers) {\r\n    // eslint-disable-next-line array-callback-return\r\n    likeAnswers.likeItems.map((eachItem) => {\r\n      console.log(eachItem)\r\n      if (eachItem.questionID === questionID) {\r\n        singleLikeAnswers = eachItem.likes;\r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <div className=\"container\">\r\n        <div className=\"mt-5 style-card\">\r\n          <Card>\r\n            <CardBody style={{ paddingBottom: \"0px\" }}>\r\n              <CardTitle>\r\n                <span>\r\n                  <span href=\"\" style={{ fontWeight: \"bold\" }}>\r\n                    {question.author ? question.author.name : \"\"}\r\n                  </span>\r\n                </span>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Moment fromNow>{question ? question.created_at : \"\"}</Moment>\r\n                </span>\r\n              </CardTitle>\r\n              <CardText>{question.content}</CardText>\r\n              <div className=\"style-fav\">\r\n                <Likes questionsID={questionID} />\r\n                <Answers questionID={questionID} />\r\n                {authID === question.author_id && (\r\n                  <div className=\"ml-auto\">\r\n                    <span>\r\n                      <DeleteQuestion questionID={question.id} />\r\n                    </span>\r\n                  </div>\r\n                )} \r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"mt-3 style-card-answer\">\r\n          {singleQuestionAnswers.length > 0\r\n            ? singleQuestionAnswers.map((answer) => {\r\n                return <Answer answer={answer} key={answer.id} />;\r\n              })\r\n            : \"\"}\r\n        </div> \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDetails;\r\n"]},"metadata":{},"sourceType":"module"}