{"ast":null,"code":"import { BEFORE_STATE_QUESTION, FETCH_QUESTIONS, FETCH_QUESTIONS_ERROR, CREATE_QUESTION_SUCCESS, CREATE_QUESTION_ERROR, GET_QUESTION_SUCCESS, GET_QUESTION_ERROR, DELETE_QUESTION_SUCCESS, DELETE_QUESTION_ERROR, FETCH_AUTH_QUESTIONS, FETCH_AUTH_QUESTIONS_ERROR } from '../questionsTypes';\nexport const initState = {\n  questions: [],\n  authQuestions: [],\n  question: {},\n  questionsError: null,\n  isLoading: false\n};\nexport const questionsState = (state = initState, action) => {\n  const {\n    payload,\n    type\n  } = action;\n\n  switch (type) {\n    case BEFORE_STATE_QUESTION:\n      return { ...state,\n        questionsError: null,\n        isLoading: true\n      };\n\n    case FETCH_QUESTIONS:\n      return { ...state,\n        questions: payload,\n        isLoading: false\n      };\n\n    case FETCH_QUESTIONS_ERROR:\n      return { ...state,\n        questionsError: payload,\n        isLoading: false\n      };\n\n    case FETCH_AUTH_QUESTIONS:\n      return { ...state,\n        authQuestions: payload,\n        isLoading: false\n      };\n\n    case FETCH_AUTH_QUESTIONS_ERROR:\n      return { ...state,\n        questionsError: payload,\n        isLoading: false\n      };\n\n    case GET_QUESTION_SUCCESS:\n      return { ...state,\n        question: payload,\n        questionsError: null,\n        isLoading: false\n      };\n\n    case GET_QUESTION_ERROR:\n      return { ...state,\n        questionsError: payload,\n        isLoading: false\n      };\n\n    case CREATE_QUESTION_SUCCESS:\n      return { ...state,\n        questions: [payload, ...state.questions],\n        authquestions: [payload, ...state.authquestions],\n        questionsError: null,\n        isLoading: false\n      };\n\n    case CREATE_QUESTION_ERROR:\n      return { ...state,\n        questionsError: payload,\n        isLoading: false\n      };\n\n    case DELETE_QUESTION_SUCCESS:\n      return { ...state,\n        questions: state.questions.filter(question => question.id !== payload.deletedID),\n        authquestions: state.authquestions.filter(question => question.id !== payload.deletedID),\n        questionsError: null,\n        isLoading: false\n      };\n\n    case DELETE_QUESTION_ERROR:\n      return { ...state,\n        questionsError: payload,\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/admin/Desktop/Ask.it/Frontend/src/store/modules/questions/reducer/questionsReducer.js"],"names":["BEFORE_STATE_QUESTION","FETCH_QUESTIONS","FETCH_QUESTIONS_ERROR","CREATE_QUESTION_SUCCESS","CREATE_QUESTION_ERROR","GET_QUESTION_SUCCESS","GET_QUESTION_ERROR","DELETE_QUESTION_SUCCESS","DELETE_QUESTION_ERROR","FETCH_AUTH_QUESTIONS","FETCH_AUTH_QUESTIONS_ERROR","initState","questions","authQuestions","question","questionsError","isLoading","questionsState","state","action","payload","type","authquestions","filter","id","deletedID"],"mappings":"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","sourcesContent":["import { BEFORE_STATE_QUESTION, FETCH_QUESTIONS, FETCH_QUESTIONS_ERROR, CREATE_QUESTION_SUCCESS, \r\n    CREATE_QUESTION_ERROR, GET_QUESTION_SUCCESS, GET_QUESTION_ERROR, DELETE_QUESTION_SUCCESS, \r\n    DELETE_QUESTION_ERROR, FETCH_AUTH_QUESTIONS, FETCH_AUTH_QUESTIONS_ERROR} from '../questionsTypes'\r\n\r\nexport const initState = {\r\n  questions: [],\r\n  authQuestions: [],\r\n  question: {},\r\n  questionsError: null,\r\n  isLoading: false,\r\n}\r\n\r\nexport const questionsState = (state = initState, action) => {\r\n\r\n  const { payload, type } = action\r\n  switch(type) {\r\n\r\n    case BEFORE_STATE_QUESTION:\r\n      return {\r\n        ...state,\r\n        questionsError: null,\r\n        isLoading: true,\r\n      }\r\n    case FETCH_QUESTIONS:\r\n      return { \r\n        ...state, \r\n        questions: payload,\r\n        isLoading: false,\r\n      }\r\n      \r\n    case FETCH_QUESTIONS_ERROR:\r\n      return { \r\n        ...state, \r\n        questionsError: payload,\r\n        isLoading: false \r\n      }\r\n\r\n    case FETCH_AUTH_QUESTIONS:\r\n      return { \r\n        ...state, \r\n        authQuestions: payload,\r\n        isLoading: false,\r\n      }\r\n\r\n    case FETCH_AUTH_QUESTIONS_ERROR:\r\n      return { \r\n        ...state, \r\n        questionsError: payload,\r\n        isLoading: false \r\n      }\r\n\r\n    case GET_QUESTION_SUCCESS:\r\n      return { \r\n        ...state, \r\n        question: payload,\r\n        questionsError: null,\r\n        isLoading: false  \r\n      }\r\n\r\n    case GET_QUESTION_ERROR:\r\n      return { \r\n        ...state, \r\n        questionsError: payload,\r\n        isLoading: false \r\n      }\r\n\r\n    case CREATE_QUESTION_SUCCESS:\r\n      return { \r\n        ...state, \r\n        questions: [payload, ...state.questions],\r\n        authquestions: [payload, ...state.authquestions],\r\n        questionsError: null,\r\n        isLoading: false  \r\n      }\r\n\r\n    case CREATE_QUESTION_ERROR:\r\n      return { \r\n        ...state, \r\n        questionsError: payload,\r\n        isLoading: false  \r\n      }\r\n\r\n     case DELETE_QUESTION_SUCCESS:\r\n      return { \r\n        ...state, \r\n        questions: state.questions.filter(question => question.id !== payload.deletedID),\r\n        authquestions: state.authquestions.filter(question => question.id !== payload.deletedID),\r\n        questionsError: null,\r\n        isLoading: false   \r\n      }\r\n\r\n    case DELETE_QUESTION_ERROR:\r\n      return { \r\n        ...state, \r\n        questionsError: payload,\r\n        isLoading: false  \r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}