{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Ministry of Programming\\\\askit\\\\src\\\\components\\\\questions\\\\QuestionDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Moment from \"react-moment\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Card, CardText, CardBody, CardTitle } from \"reactstrap\";\nimport { fetchQuestion } from \"../../store/modules/questions/actions/questionsAction\";\nimport Navigation from \"../Navigation\"; //import Likes from '../likes/Likes'\n\nimport Answers from \"../answers/Answers\";\nimport Answer from \"../answers/Answer\";\nimport CreateAnswer from \"../answers/Answer\";\nimport DeleteQuestion from \"./DeleteQuestion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionDetails = props => {\n  _s();\n\n  const questionID = props.match.params.id;\n  const dispatch = useDispatch();\n\n  const singleQuestion = id => dispatch(fetchQuestion(id));\n\n  const currentState = useSelector(state => state);\n  const currentUserState = useSelector(state => state.Auth);\n  const question = currentState.QuestionsState.question;\n  const questionAnswers = currentState.AnswersState;\n  const authID = currentUserState.userId;\n  useEffect(() => {\n    singleQuestion(questionID); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let singleQuestionAnswers = [];\n\n  if (questionAnswers) {\n    // eslint-disable-next-line array-callback-return\n    questionAnswers.answerItems.map(eachItem => {\n      if (eachItem.questionID === questionID) {\n        singleQuestionAnswers = eachItem.answers;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionDetails, \"vqxln2hP6mIa5mX887T77ciQufk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = QuestionDetails;\nexport default QuestionDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Ministry of Programming/askit/src/components/questions/QuestionDetails.js"],"names":["React","useEffect","Moment","useSelector","useDispatch","Card","CardText","CardBody","CardTitle","fetchQuestion","Navigation","Answers","Answer","CreateAnswer","DeleteQuestion","QuestionDetails","props","questionID","match","params","id","dispatch","singleQuestion","currentState","state","currentUserState","Auth","question","QuestionsState","questionAnswers","AnswersState","authID","userId","singleQuestionAnswers","answerItems","map","eachItem","answers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAoD,YAApD;AAEA,SAASC,aAAT,QAA8B,uDAA9B;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAMC,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAtC;AAEA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;;AAEA,QAAMkB,cAAc,GAAIF,EAAD,IAAQC,QAAQ,CAACZ,aAAa,CAACW,EAAD,CAAd,CAAvC;;AAEA,QAAMG,YAAY,GAAGpB,WAAW,CAAEqB,KAAD,IAAWA,KAAZ,CAAhC;AAEA,QAAMC,gBAAgB,GAAGtB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAApC;AAEA,QAAMC,QAAQ,GAAGJ,YAAY,CAACK,cAAb,CAA4BD,QAA7C;AAEA,QAAME,eAAe,GAAGN,YAAY,CAACO,YAArC;AAEA,QAAMC,MAAM,GAAGN,gBAAgB,CAACO,MAAhC;AAGA/B,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,cAAc,CAACL,UAAD,CAAd,CADc,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIgB,qBAAqB,GAAG,EAA5B;;AAGA,MAAIJ,eAAJ,EAAqB;AACnB;AACAA,IAAAA,eAAe,CAACK,WAAhB,CAA4BC,GAA5B,CAAiCC,QAAD,IAAc;AAC5C,UAAIA,QAAQ,CAACnB,UAAT,KAAwBA,UAA5B,EAAwC;AACtCgB,QAAAA,qBAAqB,GAAGG,QAAQ,CAACC,OAAjC;AACD;AACF,KAJD;AAKD;;AAED,sBACE;AAAA,2BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CA/ED;;GAAMtB,e;UAGaX,W,EAIID,W,EAEIA,W;;;KATrBY,e;AAiFN,eAAeA,eAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Card, CardText, CardBody, CardTitle } from \"reactstrap\";\r\n\r\nimport { fetchQuestion } from \"../../store/modules/questions/actions/questionsAction\";\r\nimport Navigation from \"../Navigation\";\r\n//import Likes from '../likes/Likes'\r\nimport Answers from \"../answers/Answers\";\r\nimport Answer from \"../answers/Answer\";\r\nimport CreateAnswer from \"../answers/Answer\";\r\nimport DeleteQuestion from \"./DeleteQuestion\";\r\n\r\nconst QuestionDetails = (props) => {\r\n  const questionID = props.match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const singleQuestion = (id) => dispatch(fetchQuestion(id));\r\n\r\n  const currentState = useSelector((state) => state);\r\n\r\n  const currentUserState = useSelector((state) => state.Auth);\r\n\r\n  const question = currentState.QuestionsState.question;\r\n\r\n  const questionAnswers = currentState.AnswersState;\r\n\r\n  const authID = currentUserState.userId\r\n  \r\n\r\n  useEffect(() => {\r\n    singleQuestion(questionID);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let singleQuestionAnswers = [];\r\n\r\n\r\n  if (questionAnswers) {\r\n    // eslint-disable-next-line array-callback-return\r\n    questionAnswers.answerItems.map((eachItem) => {\r\n      if (eachItem.questionID === questionID) {\r\n        singleQuestionAnswers = eachItem.answers;\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      {/* <div className=\"container\">\r\n        <div className=\"mt-5 style-card\">\r\n          <Card>\r\n            <CardBody style={{ paddingBottom: \"0px\" }}>\r\n              <CardTitle>\r\n                <span>\r\n                  <span href=\"\" style={{ fontWeight: \"bold\" }}>\r\n                    {question.author ? question.author.name : \"\"}\r\n                  </span>\r\n                </span>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Moment fromNow>{question ? question.created_at : \"\"}</Moment>\r\n                </span>\r\n              </CardTitle>\r\n              <CardText>{question.content}</CardText>\r\n              <div className=\"style-fav\">\r\n                <Answers questionID={questionID} />\r\n                {currentState.Auth && (\r\n                  <CreateAnswer questionID={questionID} />\r\n                )}\r\n                {authID === question.author_id && (\r\n                  <div className=\"ml-auto\">\r\n                    <span>\r\n                      <DeleteQuestion questionID={question.id} />\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"mt-3 style-card-answer\">\r\n          {singleQuestionAnswers.length > 0\r\n            ? singleQuestionAnswers.map((answer) => {\r\n                return <Answer answer={answer} key={answer.id} />;\r\n              })\r\n            : \"\"}\r\n        </div> \r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDetails;\r\n"]},"metadata":{},"sourceType":"module"}