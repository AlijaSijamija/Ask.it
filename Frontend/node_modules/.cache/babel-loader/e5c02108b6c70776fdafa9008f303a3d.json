{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Ministry of Programming\\\\askit\\\\src\\\\components\\\\users\\\\Update.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { Label, Input, FormGroup, Button, CardBody, Col, Row, Form, CustomInput, Modal, ModalHeader, ModalFooter, ModalBody } from \"reactstrap\";\nimport { updateUser, deleteUser, getUser } from '../../store/modules/auth/actions/authAction';\nimport './Profile.css';\nimport Message from '../utils/Message';\nimport Navigation from \"../Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = () => {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: submitUser,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"exampleAddress\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"email\",\n            value: user.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this), currentUserState.userError && currentUserState.userError.Required_email ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"color-red\",\n            children: currentUserState.userError.Required_email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 19\n          }, this) : \"\", currentUserState.userError && currentUserState.userError.Invalid_email ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"color-red\",\n            children: currentUserState.userError.Invalid_email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 19\n          }, this) : \"\", currentUserState.userError && currentUserState.userError.Taken_email ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"color-red\",\n            children: currentUserState.userError.Taken_email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"exampleAddress\",\n            children: \"Current Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"current_password\",\n            value: user.current_password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), currentUserState.userError && currentUserState.userError.Password_mismatch ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"color-red\",\n            children: currentUserState.userError.Password_mismatch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this) : \"\", currentUserState.userError && currentUserState.userError.Empty_current ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"color-red\",\n            children: currentUserState.userError.Empty_current\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"exampleAddress\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"new_password\",\n            value: user.new_password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), currentUserState.userError && currentUserState.userError.Invalid_password ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"color-red\",\n            children: currentUserState.userError.Invalid_password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this) : \"\", currentUserState.userError && currentUserState.userError.Empty_new ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"color-red\",\n            children: currentUserState.userError.Empty_new\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: currentUserState.authSuccessUser != null && currentUserState.userError == null ? /*#__PURE__*/_jsxDEV(Message, {\n            msg: currentUserState.authSuccessUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        md: {\n          size: 10,\n          offset: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: currentUserState.isUpdatingUser ? /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            block: true,\n            disabled: true,\n            children: \"Updating...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            block: true,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Ministry of Programming/askit/src/components/users/Update.js"],"names":["React","Fragment","useState","useEffect","useSelector","useDispatch","Redirect","NavLink","Label","Input","FormGroup","Button","CardBody","Col","Row","Form","CustomInput","Modal","ModalHeader","ModalFooter","ModalBody","updateUser","deleteUser","getUser","Message","Navigation","Update","submitUser","size","offset","user","email","handleChange","currentUserState","userError","Required_email","Invalid_email","Taken_email","current_password","Password_mismatch","Empty_current","new_password","Invalid_password","Empty_new","authSuccessUser","isUpdatingUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,kBAAlC;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoDC,GAApD,EAAyDC,GAAzD,EAA8DC,IAA9D,EAAoEC,WAApE,EAAiFC,KAAjF,EAAwFC,WAAxF,EAAqGC,WAArG,EAAkHC,SAAlH,QAAmI,YAAnI;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,OAAjC,QAAgD,6CAAhD;AACA,OAAQ,eAAR;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,sBACA,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEC,UAAhB;AAAA,4BACM,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,MAAM,EAAE;AAApB,SAAjB;AAAA,+BACE,QAAC,SAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,OAAxB;AAAgC,YAAA,KAAK,EAAEC,IAAI,CAACC,KAA5C;AAAmD,YAAA,QAAQ,EAAEC;AAA7D;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGIC,gBAAgB,CAACC,SAAjB,IAA8BD,gBAAgB,CAACC,SAAjB,CAA2BC,cAAzD,gBACA;AAAO,YAAA,SAAS,EAAC,WAAjB;AAAA,sBAA8BF,gBAAgB,CAACC,SAAjB,CAA2BC;AAAzD;AAAA;AAAA;AAAA;AAAA,kBADA,GAGE,EANN,EAQIF,gBAAgB,CAACC,SAAjB,IAA8BD,gBAAgB,CAACC,SAAjB,CAA2BE,aAAzD,gBACA;AAAO,YAAA,SAAS,EAAC,WAAjB;AAAA,sBAA+BH,gBAAgB,CAACC,SAAjB,CAA2BE;AAA1D;AAAA;AAAA;AAAA;AAAA,kBADA,GAGE,EAXN,EAaIH,gBAAgB,CAACC,SAAjB,IAA8BD,gBAAgB,CAACC,SAAjB,CAA2BG,WAAzD,gBACA;AAAO,YAAA,SAAS,EAAC,WAAjB;AAAA,sBAA+BJ,gBAAgB,CAACC,SAAjB,CAA2BG;AAA1D;AAAA;AAAA;AAAA;AAAA,kBADA,GAGE,EAhBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADN,eAwBM,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAE;AAAET,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,MAAM,EAAE;AAApB,SAAjB;AAAA,+BACE,QAAC,SAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,IAAI,EAAC,kBAA5B;AAA+C,YAAA,KAAK,EAAEC,IAAI,CAACQ,gBAA3D;AAA+E,YAAA,QAAQ,EAAEN;AAAzF;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGIC,gBAAgB,CAACC,SAAjB,IAA8BD,gBAAgB,CAACC,SAAjB,CAA2BK,iBAAzD,gBACA;AAAO,YAAA,SAAS,EAAC,WAAjB;AAAA,sBAA8BN,gBAAgB,CAACC,SAAjB,CAA2BK;AAAzD;AAAA;AAAA;AAAA;AAAA,kBADA,GAGE,EANN,EAQIN,gBAAgB,CAACC,SAAjB,IAA8BD,gBAAgB,CAACC,SAAjB,CAA2BM,aAAzD,gBACA;AAAO,YAAA,SAAS,EAAC,WAAjB;AAAA,sBAA+BP,gBAAgB,CAACC,SAAjB,CAA2BM;AAA1D;AAAA;AAAA;AAAA;AAAA,kBADA,GAGE,EAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxBN,eA0CM,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAE;AAAEZ,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,MAAM,EAAE;AAApB,SAAjB;AAAA,+BACE,QAAC,SAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,IAAI,EAAC,cAA5B;AAA2C,YAAA,KAAK,EAAEC,IAAI,CAACW,YAAvD;AAAsE,YAAA,QAAQ,EAAET;AAAhF;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGIC,gBAAgB,CAACC,SAAjB,IAA8BD,gBAAgB,CAACC,SAAjB,CAA2BQ,gBAAzD,gBACA;AAAO,YAAA,SAAS,EAAC,WAAjB;AAAA,sBAA+BT,gBAAgB,CAACC,SAAjB,CAA2BQ;AAA1D;AAAA;AAAA;AAAA;AAAA,kBADA,GAGE,EANN,EAQIT,gBAAgB,CAACC,SAAjB,IAA8BD,gBAAgB,CAACC,SAAjB,CAA2BS,SAAzD,gBACA;AAAO,YAAA,SAAS,EAAC,WAAjB;AAAA,sBAA+BV,gBAAgB,CAACC,SAAjB,CAA2BS;AAA1D;AAAA;AAAA;AAAA;AAAA,kBADA,GAGE,EAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1CN,eA4DM,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAE;AAAEf,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,MAAM,EAAE;AAApB,SAAjB;AAAA,+BACE,QAAC,SAAD;AAAA,oBACII,gBAAgB,CAACW,eAAjB,IAAoC,IAApC,IAA4CX,gBAAgB,CAACC,SAAjB,IAA8B,IAA1E,gBACA,QAAC,OAAD;AAAS,YAAA,GAAG,EAAED,gBAAgB,CAACW;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADA,GAGE;AAJN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5DN,eAuEM,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAE;AAAEhB,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,MAAM,EAAE;AAApB,SAAjB;AAAA,+BACE,QAAC,SAAD;AAAA,oBACII,gBAAgB,CAACY,cAAjB,gBACA,QAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,KAAK,MAHP;AAIE,YAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,gBAUA,QAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,KAAK,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvEN;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAkGH,CAnGD;;KAAMnB,M;AAoGN,eAAeA,MAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect, NavLink } from 'react-router-dom';\r\nimport { Label, Input, FormGroup, Button, CardBody, Col, Row, Form, CustomInput, Modal, ModalHeader, ModalFooter, ModalBody } from \"reactstrap\";\r\nimport { updateUser, deleteUser, getUser } from '../../store/modules/auth/actions/authAction';\r\nimport  './Profile.css'\r\nimport Message from '../utils/Message';\r\n\r\nimport Navigation from \"../Navigation\"\r\n\r\nconst Update = () => {\r\n    return(\r\n    <Form onSubmit={submitUser}>\r\n          <Row>\r\n            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\r\n              <FormGroup>\r\n                <Label for=\"exampleAddress\">Email</Label>\r\n                <Input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} />\r\n                { currentUserState.userError && currentUserState.userError.Required_email ? (\r\n                  <small className=\"color-red\">{currentUserState.userError.Required_email}</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n                { currentUserState.userError && currentUserState.userError.Invalid_email ? (\r\n                  <small className=\"color-red\">{ currentUserState.userError.Invalid_email }</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n                { currentUserState.userError && currentUserState.userError.Taken_email ? (\r\n                  <small className=\"color-red\">{ currentUserState.userError.Taken_email }</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\r\n              <FormGroup>\r\n                <Label for=\"exampleAddress\">Current Password</Label>\r\n                <Input type=\"password\" name=\"current_password\" value={user.current_password}   onChange={handleChange}/>\r\n                { currentUserState.userError && currentUserState.userError.Password_mismatch ? (\r\n                  <small className=\"color-red\">{currentUserState.userError.Password_mismatch}</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n                { currentUserState.userError && currentUserState.userError.Empty_current ? (\r\n                  <small className=\"color-red\">{ currentUserState.userError.Empty_current }</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\r\n              <FormGroup>\r\n                <Label for=\"exampleAddress\">New Password</Label>\r\n                <Input type=\"password\" name=\"new_password\" value={user.new_password}  onChange={handleChange}/>\r\n                { currentUserState.userError && currentUserState.userError.Invalid_password ? (\r\n                  <small className=\"color-red\">{ currentUserState.userError.Invalid_password }</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n                { currentUserState.userError && currentUserState.userError.Empty_new ? (\r\n                  <small className=\"color-red\">{ currentUserState.userError.Empty_new }</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-4\">\r\n            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\r\n              <FormGroup>\r\n                { currentUserState.authSuccessUser != null && currentUserState.userError == null ? (\r\n                  <Message msg={currentUserState.authSuccessUser} />\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-3\">\r\n            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\r\n              <FormGroup>\r\n                { currentUserState.isUpdatingUser ? (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    block\r\n                    disabled\r\n                  >\r\n                    Updating...\r\n                </Button>\r\n                ) : (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    block\r\n                  >\r\n                  Update\r\n                </Button>\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n    )\r\n}\r\nexport default Update"]},"metadata":{},"sourceType":"module"}