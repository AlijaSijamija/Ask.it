{"ast":null,"code":"import { SIGNUP_SUCCESS, SIGNUP_ERROR, LOGIN_SUCCESS, LOGIN_ERROR, LOGOUT_SUCCESS, UPDATE_USER_SUCCESS, UPDATE_USER_ERROR, BEFORE_STATE, BEFORE_USER_STATE, DELETE_USER_SUCCESS, DELETE_USER_ERROR, FETCH_USERS, FETCH_USERS_ERROR } from '../authTypes';\nimport isEmpty from 'lodash/isEmpty';\nexport const initState = {\n  isAuthenticated: false,\n  currentUser: {},\n  isLoading: false,\n  isUpdatingUser: false,\n  authError: null,\n  authSuccess: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    // This is the state to set when the button is click and we are waiting for response \n    case BEFORE_STATE:\n      return { ...state,\n        authError: null,\n        isLoading: true\n      };\n\n    case FETCH_USERS:\n      return { ...state,\n        users: payload,\n        isLoading: false\n      };\n\n    case FETCH_USERS_ERROR:\n      return { ...state,\n        usersError: payload,\n        isLoading: false\n      };\n\n    case BEFORE_USER_STATE:\n      return { ...state,\n        userError: null,\n        isUpdatingUser: true\n      };\n\n    case SIGNUP_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        signupError: null,\n        loginError: null\n      };\n\n    case SIGNUP_ERROR:\n      return { ...state,\n        isLoading: false,\n        signupError: action.payload,\n        loginError: null\n      };\n\n    case LOGIN_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        currentUser: action.payload,\n        isAuthenticated: !isEmpty(action.payload),\n        loginError: null,\n        signupError: null\n      };\n\n    case LOGIN_ERROR:\n      return { ...state,\n        isLoading: false,\n        loginError: action.payload,\n        signupError: null\n      };\n\n    case LOGOUT_SUCCESS:\n      return { ...state,\n        isAuthenticated: false,\n        currentUser: {},\n        logoutError: null,\n        isLoading: false,\n        signupError: null,\n        loginError: null\n      };\n\n    case UPDATE_USER_SUCCESS:\n      return { ...state,\n        isUpdatingUser: false,\n        currentUser: action.payload,\n        userError: null,\n        authSuccessUser: \"Details Updated\"\n      };\n\n    case UPDATE_USER_ERROR:\n      return { ...state,\n        isUpdatingUser: false,\n        userError: action.payload\n      };\n\n    case DELETE_USER_SUCCESS:\n      return { ...state,\n        isAuthenticated: false,\n        currentUser: {},\n        isLoading: false,\n        authSuccessUser: \"User Deleted\"\n      };\n\n    case DELETE_USER_ERROR:\n      return { ...state,\n        isLoading: false,\n        userError: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/admin/Desktop/Ministry of Programming/askit/src/store/modules/auth/reducer/authReducer.js"],"names":["SIGNUP_SUCCESS","SIGNUP_ERROR","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT_SUCCESS","UPDATE_USER_SUCCESS","UPDATE_USER_ERROR","BEFORE_STATE","BEFORE_USER_STATE","DELETE_USER_SUCCESS","DELETE_USER_ERROR","FETCH_USERS","FETCH_USERS_ERROR","isEmpty","initState","isAuthenticated","currentUser","isLoading","isUpdatingUser","authError","authSuccess","authReducer","state","action","type","users","payload","usersError","userError","signupError","loginError","logoutError","authSuccessUser"],"mappings":"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","sourcesContent":["import { SIGNUP_SUCCESS, SIGNUP_ERROR, LOGIN_SUCCESS, LOGIN_ERROR, LOGOUT_SUCCESS, \r\n    UPDATE_USER_SUCCESS, UPDATE_USER_ERROR, BEFORE_STATE, BEFORE_USER_STATE, \r\n    DELETE_USER_SUCCESS, DELETE_USER_ERROR, FETCH_USERS, FETCH_USERS_ERROR  } from '../authTypes'\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\nexport const initState = {\r\n  isAuthenticated: false,\r\n  currentUser: {},\r\n  isLoading: false,\r\n  isUpdatingUser: false,\r\n  authError: null,\r\n  authSuccess: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n\r\n    // This is the state to set when the button is click and we are waiting for response \r\n    case BEFORE_STATE:\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n        isLoading: true,\r\n      }\r\n      case FETCH_USERS:\r\n        return { \r\n          ...state, \r\n          users: payload,\r\n          isLoading: false,\r\n      }\r\n      case FETCH_USERS_ERROR:\r\n        return { \r\n          ...state, \r\n          usersError: payload,\r\n          isLoading: false \r\n      }\r\n    case BEFORE_USER_STATE:\r\n      return {\r\n        ...state,\r\n        userError: null,\r\n        isUpdatingUser: true,\r\n      }\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        signupError: null,\r\n        loginError: null\r\n\r\n      }\r\n    case SIGNUP_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        signupError: action.payload,\r\n        loginError: null\r\n\r\n      }\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        currentUser: action.payload,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        loginError: null,\r\n        signupError: null,\r\n\r\n      }\r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        loginError: action.payload,\r\n        signupError: null,\r\n\r\n      }\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        currentUser: {},\r\n        logoutError: null,\r\n        isLoading: false,\r\n        signupError: null,\r\n        loginError: null,\r\n      }\r\n    case UPDATE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isUpdatingUser: false,\r\n        currentUser: action.payload,\r\n        userError: null,\r\n        authSuccessUser: \"Details Updated\"\r\n      }\r\n    case UPDATE_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        isUpdatingUser: false,\r\n        userError: action.payload\r\n      }\r\n    case DELETE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        currentUser: {},\r\n        isLoading: false,\r\n        authSuccessUser: \"User Deleted\"\r\n      }\r\n    case DELETE_USER_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        userError: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer"]},"metadata":{},"sourceType":"module"}