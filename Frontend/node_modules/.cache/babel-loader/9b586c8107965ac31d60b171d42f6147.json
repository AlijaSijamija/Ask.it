{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Ministry of Programming\\\\askit\\\\src\\\\components\\\\questions\\\\QuestionDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Moment from \"react-moment\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Card, CardText, CardBody, CardTitle } from \"reactstrap\";\nimport { fetchQuestion } from \"../../store/modules/questions/actions/questionsAction\";\nimport Navigation from \"../Navigation\"; //import Likes from '../likes/Likes'\n\nimport Answers from \"../answers/Answers\";\nimport Answer from \"../answers/Answer\";\nimport CreateAnswer from \"../answers/CreateAnswer\";\nimport DeleteQuestion from \"./DeleteQuestion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionDetails = props => {\n  _s();\n\n  const questionID = props.match.params.id;\n  const dispatch = useDispatch();\n\n  const singleQuestion = id => dispatch(fetchQuestion(id));\n\n  const currentState = useSelector(state => state);\n  const currentUserState = useSelector(state => state.Auth);\n  const question = currentState.QuestionsState.question;\n  const questionAnswers = currentState.AnswersState;\n  const authID = currentUserState.userId;\n  useEffect(() => {\n    singleQuestion(questionID); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let singleQuestionAnswers = [];\n  console.log(questionAnswers.answerItems);\n\n  if (questionAnswers) {\n    // eslint-disable-next-line array-callback-return\n    questionAnswers.answerItems.map(eachItem => {\n      if (eachItem.questionID === questionID) {\n        singleQuestionAnswers = eachItem.answers;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 style-card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            style: {\n              paddingBottom: \"0px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  href: \"\",\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: question.author ? question.author.name : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  float: \"right\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Moment, {\n                  fromNow: true,\n                  children: question ? question.created_at : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: question.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"style-fav\",\n              children: [currentUserState.isAuthenticated && /*#__PURE__*/_jsxDEV(Answers, {\n                questionID: questionID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), authID === question.author_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(DeleteQuestion, {\n                    questionID: question.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 style-card-answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionDetails, \"vqxln2hP6mIa5mX887T77ciQufk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = QuestionDetails;\nexport default QuestionDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Ministry of Programming/askit/src/components/questions/QuestionDetails.js"],"names":["React","useEffect","Moment","useSelector","useDispatch","Card","CardText","CardBody","CardTitle","fetchQuestion","Navigation","Answers","Answer","CreateAnswer","DeleteQuestion","QuestionDetails","props","questionID","match","params","id","dispatch","singleQuestion","currentState","state","currentUserState","Auth","question","QuestionsState","questionAnswers","AnswersState","authID","userId","singleQuestionAnswers","console","log","answerItems","map","eachItem","answers","paddingBottom","fontWeight","author","name","float","created_at","content","isAuthenticated","author_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Card, CardText, CardBody, CardTitle } from \"reactstrap\";\r\n\r\nimport { fetchQuestion } from \"../../store/modules/questions/actions/questionsAction\";\r\nimport Navigation from \"../Navigation\";\r\n//import Likes from '../likes/Likes'\r\nimport Answers from \"../answers/Answers\";\r\nimport Answer from \"../answers/Answer\";\r\nimport CreateAnswer from \"../answers/CreateAnswer\";\r\nimport DeleteQuestion from \"./DeleteQuestion\";\r\n\r\nconst QuestionDetails = (props) => {\r\n  const questionID = props.match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const singleQuestion = (id) => dispatch(fetchQuestion(id));\r\n\r\n  const currentState = useSelector((state) => state);\r\n\r\n  const currentUserState = useSelector((state) => state.Auth);\r\n\r\n  const question = currentState.QuestionsState.question;\r\n\r\n  const questionAnswers = currentState.AnswersState;\r\n\r\n  const authID = currentUserState.userId\r\n  \r\n\r\n  useEffect(() => {\r\n    singleQuestion(questionID);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let singleQuestionAnswers = [];\r\n  console.log(questionAnswers.answerItems)\r\n\r\n  if (questionAnswers) {\r\n    // eslint-disable-next-line array-callback-return\r\n    questionAnswers.answerItems.map((eachItem) => {\r\n      if (eachItem.questionID === questionID) {\r\n        singleQuestionAnswers = eachItem.answers;\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <div className=\"container\">\r\n        <div className=\"mt-5 style-card\">\r\n          <Card>\r\n            <CardBody style={{ paddingBottom: \"0px\" }}>\r\n              <CardTitle>\r\n                <span>\r\n                  <span href=\"\" style={{ fontWeight: \"bold\" }}>\r\n                    {question.author ? question.author.name : \"\"}\r\n                  </span>\r\n                </span>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Moment fromNow>{question ? question.created_at : \"\"}</Moment>\r\n                </span>\r\n              </CardTitle>\r\n              <CardText>{question.content}</CardText>\r\n              <div className=\"style-fav\">\r\n                {currentUserState.isAuthenticated && (\r\n                  <Answers questionID={questionID} />\r\n                )}\r\n                {authID === question.author_id && (\r\n                  <div className=\"ml-auto\">\r\n                    <span>\r\n                      <DeleteQuestion questionID={question.id} />\r\n                    </span>\r\n                  </div>\r\n                )} \r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"mt-3 style-card-answer\">\r\n          {/* {singleQuestionAnswers.length > 0\r\n            ? singleQuestionAnswers.map((answer) => {\r\n                return <Answer answer={answer} key={answer.id} />;\r\n              })\r\n            : \"\"} */}\r\n        </div> \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDetails;\r\n"]},"metadata":{},"sourceType":"module"}