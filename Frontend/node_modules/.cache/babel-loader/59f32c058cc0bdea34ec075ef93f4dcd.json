{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Ministry of Programming\\\\askit\\\\src\\\\components\\\\questions\\\\CreateQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Label, Input, FormGroup, Button, Card, CardHeader, CardBody } from \"reactstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./Questions.css\";\nimport Navigation from '../Navigation';\nimport { createQuestion } from '../../store/modules/questions/actions/questionsAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateQuestion = () => {\n  _s();\n\n  const currentState = useSelector(state => state);\n  const [question, setQuestion] = useState({\n    content: ''\n  });\n  const dispatch = useDispatch();\n\n  const addQuestion = questionDetails => dispatch(createQuestion(questionDetails));\n\n  const handleChange = e => {\n    setquestion({ ...question,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitUser = e => {\n    e.preventDefault();\n    addQuestion({\n      content: question.content\n    });\n  };\n\n  if (!currentState.Auth.isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-style container App\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card-style\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: \"Create Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitUser,\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"textarea\",\n                cols: \"30\",\n                rows: \"6\",\n                name: \"content\",\n                id: \"\",\n                placeholder: \"Enter a short description\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 13\n              }, this), currentState.QuestionsState.questionsError && currentState.QuestionsState.questionsError.Required_content ? /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"color-red\",\n                children: currentState.QuestionsState.questionsError.Required_content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 15\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 11\n            }, this), currentState.QuestionsState.isLoading ? /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"submit\",\n              block: true,\n              disabled: true,\n              children: \"Creating...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"submit\",\n              block: true,\n              children: \"Create Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CreateQuestion, \"1y03LZTJQBRjmVeKyn1EVZOOTMo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CreateQuestion;\nexport default CreateQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateQuestion\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Ministry of Programming/askit/src/components/questions/CreateQuestion.js"],"names":["React","useState","Label","Input","FormGroup","Button","Card","CardHeader","CardBody","Redirect","useSelector","useDispatch","Navigation","createQuestion","CreateQuestion","currentState","state","question","setQuestion","content","dispatch","addQuestion","questionDetails","handleChange","e","setquestion","target","name","value","submitUser","preventDefault","Auth","isAuthenticated","QuestionsState","questionsError","Required_content","isLoading"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Label, Input, FormGroup, Button, Card, CardHeader, CardBody } from \"reactstrap\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport \"./Questions.css\";\r\nimport Navigation from '../Navigation'\r\nimport { createQuestion } from '../../store/modules/questions/actions/questionsAction';\r\n\r\n\r\n\r\nconst CreateQuestion = () => {\r\n\r\n  const currentState = useSelector((state) => state);\r\n\r\n  const [question, setQuestion] = useState({\r\n    content: '',\r\n  });\r\n  const dispatch = useDispatch()\r\n\r\n  const addQuestion = (questionDetails) => dispatch(createQuestion(questionDetails))\r\n\r\n  const handleChange = e => {\r\n    setquestion({\r\n      ...question,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  const submitUser = (e) => {\r\n    e.preventDefault()\r\n    addQuestion({\r\n      content: question.content,\r\n    });\r\n  }\r\n\r\n  if(!currentState.Auth.isAuthenticated){\r\n    return <Redirect to='/login' />\r\n  }\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Navigation />\r\n        </div>\r\n        <div className=\"question-style container App\">\r\n        <Card className=\"card-style\">\r\n          <CardHeader>Create Question</CardHeader>\r\n          <CardBody>\r\n          <form onSubmit={submitUser}>\r\n          <FormGroup>\r\n            <Label>Content</Label>\r\n            <Input type=\"textarea\" cols=\"30\" rows=\"6\" name=\"content\" id=\"\" placeholder=\"Enter a short description\" onChange={handleChange} />\r\n            { currentState.QuestionsState.questionsError && currentState.QuestionsState.questionsError.Required_content ? (\r\n              <small className=\"color-red\">{currentState.QuestionsState.questionsError.Required_content}</small>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </FormGroup>\r\n\r\n            { currentState.QuestionsState.isLoading ? (\r\n              <Button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                block\r\n                disabled\r\n              >\r\n                Creating...\r\n            </Button>\r\n            ) : (\r\n              <Button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                block\r\n              >\r\n              Create Question\r\n            </Button>\r\n            )}\r\n            </form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateQuestion"]},"metadata":{},"sourceType":"module"}