{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Ministry of Programming\\\\askit\\\\src\\\\components\\\\questions\\\\QuestionDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Moment from 'react-moment';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Card, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { fetchQuestion } from '../../store/modules/questions/actions/questionsAction';\nimport Navigation from '../Navigation'; //import Likes from '../likes/Likes'\n\nimport Answers from '../answers/Answers';\nimport Answer from '../answers/Answer';\nimport DeleteQuestion from './DeleteQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionDetails = props => {\n  _s();\n\n  const questionID = props.match.params.id;\n  const dispatch = useDispatch();\n\n  const singleQuestion = id => dispatch(fetchQuestion(id));\n\n  const currentState = useSelector(state => state);\n  const question = currentState.QuestionsState.question;\n  const questionAnswers = currentState.AnswersState;\n  const authID = currentState.Auth.currentUser ? currentState.Auth.currentUser.id : \"\";\n  useEffect(() => {\n    singleQuestion(questionID); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let singleQuestionAnswers = [];\n\n  if (questionAnswers) {\n    // eslint-disable-next-line array-callback-return\n    questionAnswers.answerItems.map(eachItem => {\n      if (eachItem.questionID === questionID) {\n        singleQuestionAnswers = eachItem.answers;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 style-card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            style: {\n              paddingBottom: \"0px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  href: \"\",\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: question.author ? question.author.name : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  float: 'right'\n                },\n                children: /*#__PURE__*/_jsxDEV(Moment, {\n                  fromNow: true,\n                  children: question ? question.created_at : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: question.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"style-fav\",\n              children: [/*#__PURE__*/_jsxDEV(Likes, {\n                questionID: Number(questionID)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Answers, {\n                questionID: questionID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), authID === question.author_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(DeleteQuestion, {\n                    questionID: question.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 style-card-answer\",\n        children: singleQuestionAnswers ? singleQuestionAnswers.map(answer => {\n          return /*#__PURE__*/_jsxDEV(Answer, {\n            answer: answer\n          }, answer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this);\n        }) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionDetails, \"k2hKwr5DbANJceJVS23XjeWgXgw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = QuestionDetails;\nexport default QuestionDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Ministry of Programming/askit/src/components/questions/QuestionDetails.js"],"names":["React","useEffect","Moment","useSelector","useDispatch","Card","CardText","CardBody","CardTitle","fetchQuestion","Navigation","Answers","Answer","DeleteQuestion","QuestionDetails","props","questionID","match","params","id","dispatch","singleQuestion","currentState","state","question","QuestionsState","questionAnswers","AnswersState","authID","Auth","currentUser","singleQuestionAnswers","answerItems","map","eachItem","answers","paddingBottom","fontWeight","author","name","float","created_at","content","Number","author_id","answer"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport Moment from 'react-moment';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Card, CardText, CardBody, CardTitle } from 'reactstrap';\r\n\r\nimport { fetchQuestion } from '../../store/modules/questions/actions/questionsAction'\r\nimport Navigation from '../Navigation'\r\n//import Likes from '../likes/Likes'\r\nimport Answers from '../answers/Answers'\r\nimport Answer from '../answers/Answer'\r\nimport DeleteQuestion from './DeleteQuestion'\r\n\r\n\r\nconst QuestionDetails = (props) => {\r\n\r\n  const questionID  = props.match.params.id\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const singleQuestion = id => dispatch(fetchQuestion(id))\r\n\r\n  const currentState = useSelector(state => state)\r\n\r\n  const question = currentState.QuestionsState.question\r\n\r\n  const questionAnswers = currentState.AnswersState\r\n\r\n  const authID = currentState.Auth.currentUser ? currentState.Auth.currentUser.id : \"\"\r\n\r\n  useEffect(() => {\r\n    singleQuestion(questionID)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  let singleQuestionAnswers = []\r\n\r\n  if(questionAnswers){\r\n    // eslint-disable-next-line array-callback-return\r\n    questionAnswers.answerItems.map(eachItem => {\r\n      if(eachItem.questionID === questionID){\r\n        singleQuestionAnswers = eachItem.answers  \r\n      } \r\n    }) \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <div className=\"container\">\r\n        <div className=\"mt-5 style-card\">\r\n          <Card>\r\n            <CardBody style={{paddingBottom: \"0px\"}}>\r\n            <CardTitle>\r\n              <span>\r\n                <span href=\"\" style={{fontWeight: 'bold'}}>{question.author ? question.author.name : \"\"}</span>\r\n              </span>\r\n              <span style={{float: 'right'}}>\r\n                <Moment fromNow>\r\n                  {question ? question.created_at : \"\"}\r\n                </Moment>\r\n              </span>\r\n              </CardTitle>\r\n              <CardText>{question.content}</CardText>\r\n              <div className=\"style-fav\">\r\n                <Likes questionID={Number(questionID)} />\r\n                <Answers questionID={questionID} />\r\n                { authID === question.author_id ? (\r\n                <div className=\"ml-auto\">\r\n                  <span>\r\n                    <DeleteQuestion questionID={question.id} />\r\n                  </span>\r\n                </div>\r\n              ) : \"\"}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"mt-3 style-card-answer\">\r\n          {singleQuestionAnswers ? singleQuestionAnswers.map(answer => {\r\n            return (\r\n              <Answer answer={answer} key={answer.id} />\r\n            )\r\n          }) \r\n          : \"\"\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionDetails"]},"metadata":{},"sourceType":"module"}