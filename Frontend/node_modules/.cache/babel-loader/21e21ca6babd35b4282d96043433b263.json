{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Ministry of Programming\\\\askit\\\\src\\\\components\\\\users\\\\Update.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { Label, Input, FormGroup, Button, CardBody, Col, Row, Form, CustomInput, Modal, ModalHeader, ModalFooter, ModalBody } from \"reactstrap\";\nimport { updateUser, deleteUser, getUser } from '../../store/modules/auth/actions/authAction';\nimport './Profile.css';\nimport Message from '../utils/Message';\nimport Navigation from \"../Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = () => {\n  _s();\n\n  const currentUserState = useSelector(state => state.Auth);\n  const dispatch = useDispatch();\n\n  const userUpdate = userDetails => dispatch(updateUser(userDetails));\n\n  const user_data = localStorage.getItem('user_info');\n  const user_info = JSON.parse(user_data);\n  const [user, setUser] = useState({\n    email: user_info.email,\n    name: user_info.name,\n    sur_name: user_info.sur_name,\n    id: user_info.id\n  });\n\n  const submitUser = e => {\n    e.preventDefault();\n    userUpdate({\n      email: user.email,\n      name: user.name,\n      sur_name: user.sur_name,\n      id: user_info.id\n    });\n  };\n\n  const handleChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  if (!currentUserState.isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitUser,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"12\",\n          md: {\n            size: 10,\n            offset: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"exampleAddress\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"email\",\n              value: user.email,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), currentUserState.userError && currentUserState.userError.Required_email ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"color-red\",\n              children: currentUserState.userError.Required_email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this) : \"\", currentUserState.userError && currentUserState.userError.Invalid_email ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"color-red\",\n              children: currentUserState.userError.Invalid_email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this) : \"\", currentUserState.userError && currentUserState.userError.Taken_email ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"color-red\",\n              children: currentUserState.userError.Taken_email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"12\",\n          md: {\n            size: 10,\n            offset: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"exampleAddress\",\n              children: \"Current Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              name: \"current_password\",\n              value: user.current_password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), currentUserState.userError && currentUserState.userError.Password_mismatch ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"color-red\",\n              children: currentUserState.userError.Password_mismatch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this) : \"\", currentUserState.userError && currentUserState.userError.Empty_current ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"color-red\",\n              children: currentUserState.userError.Empty_current\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"12\",\n          md: {\n            size: 10,\n            offset: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"exampleAddress\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              name: \"new_password\",\n              value: user.new_password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), currentUserState.userError && currentUserState.userError.Invalid_password ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"color-red\",\n              children: currentUserState.userError.Invalid_password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this) : \"\", currentUserState.userError && currentUserState.userError.Empty_new ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"color-red\",\n              children: currentUserState.userError.Empty_new\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"12\",\n          md: {\n            size: 10,\n            offset: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: currentUserState.authSuccessUser != null && currentUserState.userError == null ? /*#__PURE__*/_jsxDEV(Message, {\n              msg: currentUserState.authSuccessUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"12\",\n          md: {\n            size: 10,\n            offset: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: currentUserState.isUpdatingUser ? /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"submit\",\n              block: true,\n              disabled: true,\n              children: \"Updating...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"submit\",\n              block: true,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Update, \"eye8TFXxZ1QZj1rw7hn0OP4oD+M=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Ministry of Programming/askit/src/components/users/Update.js"],"names":["React","Fragment","useState","useEffect","useSelector","useDispatch","Redirect","NavLink","Label","Input","FormGroup","Button","CardBody","Col","Row","Form","CustomInput","Modal","ModalHeader","ModalFooter","ModalBody","updateUser","deleteUser","getUser","Message","Navigation","Update","currentUserState","state","Auth","dispatch","userUpdate","userDetails","user_data","localStorage","getItem","user_info","JSON","parse","user","setUser","email","name","sur_name","id","submitUser","e","preventDefault","handleChange","target","value","isAuthenticated","size","offset","userError","Required_email","Invalid_email","Taken_email","current_password","Password_mismatch","Empty_current","new_password","Invalid_password","Empty_new","authSuccessUser","isUpdatingUser"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect, NavLink } from 'react-router-dom';\r\nimport { Label, Input, FormGroup, Button, CardBody, Col, Row, Form, CustomInput, Modal, ModalHeader, ModalFooter, ModalBody } from \"reactstrap\";\r\nimport { updateUser, deleteUser, getUser } from '../../store/modules/auth/actions/authAction';\r\nimport  './Profile.css'\r\nimport Message from '../utils/Message';\r\n\r\nimport Navigation from \"../Navigation\"\r\n\r\nconst Update = () => {\r\n    const currentUserState = useSelector((state) => state.Auth);\r\n    const dispatch = useDispatch()\r\n\r\n    const userUpdate = (userDetails) => dispatch(updateUser(userDetails))\r\n\r\n    const user_data = localStorage.getItem('user_info')\r\n    const user_info = JSON.parse(user_data)\r\n    \r\n    const [user, setUser] = useState({\r\n        email: user_info.email,\r\n        name: user_info.name,\r\n        sur_name: user_info.sur_name,\r\n        id: user_info.id\r\n      })\r\n\r\n    const submitUser = (e) => {\r\n        e.preventDefault()\r\n        userUpdate({\r\n          email: user.email,\r\n          name: user.name,\r\n          sur_name: user.sur_name,\r\n          id: user_info.id\r\n        })\r\n      }\r\n    const handleChange = e => {\r\n     setUser({\r\n         ...user,\r\n          [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    if(!currentUserState.isAuthenticated){\r\n        return <Redirect to='/login' />\r\n      }\r\n\r\n    return(\r\n        <Fragment>\r\n        <Navigation />\r\n        <Form onSubmit={submitUser}>\r\n          <Row>\r\n            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\r\n              <FormGroup>\r\n                <Label for=\"exampleAddress\">Email</Label>\r\n                <Input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} />\r\n                { currentUserState.userError && currentUserState.userError.Required_email ? (\r\n                  <small className=\"color-red\">{currentUserState.userError.Required_email}</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n                { currentUserState.userError && currentUserState.userError.Invalid_email ? (\r\n                  <small className=\"color-red\">{ currentUserState.userError.Invalid_email }</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n                { currentUserState.userError && currentUserState.userError.Taken_email ? (\r\n                  <small className=\"color-red\">{ currentUserState.userError.Taken_email }</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\r\n              <FormGroup>\r\n                <Label for=\"exampleAddress\">Current Password</Label>\r\n                <Input type=\"password\" name=\"current_password\" value={user.current_password}   onChange={handleChange}/>\r\n                { currentUserState.userError && currentUserState.userError.Password_mismatch ? (\r\n                  <small className=\"color-red\">{currentUserState.userError.Password_mismatch}</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n                { currentUserState.userError && currentUserState.userError.Empty_current ? (\r\n                  <small className=\"color-red\">{ currentUserState.userError.Empty_current }</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\r\n              <FormGroup>\r\n                <Label for=\"exampleAddress\">New Password</Label>\r\n                <Input type=\"password\" name=\"new_password\" value={user.new_password}  onChange={handleChange}/>\r\n                { currentUserState.userError && currentUserState.userError.Invalid_password ? (\r\n                  <small className=\"color-red\">{ currentUserState.userError.Invalid_password }</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n                { currentUserState.userError && currentUserState.userError.Empty_new ? (\r\n                  <small className=\"color-red\">{ currentUserState.userError.Empty_new }</small>\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-4\">\r\n            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\r\n              <FormGroup>\r\n                { currentUserState.authSuccessUser != null && currentUserState.userError == null ? (\r\n                  <Message msg={currentUserState.authSuccessUser} />\r\n                  ) : (\r\n                    \"\"\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-3\">\r\n            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\r\n              <FormGroup>\r\n                { currentUserState.isUpdatingUser ? (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    block\r\n                    disabled\r\n                  >\r\n                    Updating...\r\n                </Button>\r\n                ) : (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    block\r\n                  >\r\n                  Update\r\n                </Button>\r\n                )}\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Update"]},"metadata":{},"sourceType":"module"}